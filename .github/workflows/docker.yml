---
name:                          "docker"

on:
  # schedule:
  #   - cron:                  "0 21 * * *"
  push:

env:
  DOCKER_USER:                 "pandemonium1986"
  DOCKER_IMAGE:                "alpine312"

jobs:
  lint:
    name:                      "GitHub => Super Linter"
    runs-on:                   ubuntu-latest
    steps:
    - name:                    "Init => Run checkout@v2"
      uses:                    actions/checkout@v2
      with:
        fetch-depth:           0
    - name:                    "Prepare => Get the current branch"
      run:                     echo CURRENT_BRANCH=${GITHUB_REF/refs\/heads\//} >> $GITHUB_ENV
    - name:                    "Prepare => Get the current tag"
      if:                      ${{ github.event_name == 'release' }}
      run:                     echo CURRENT_BRANCH=${GITHUB_REF/refs\/tags\//} >> $GITHUB_ENV
    - name:                    "GitHub => Lint Dockerfile"
      uses:                    github/super-linter@v3
      env:
        VALIDATE_ALL_CODEBASE: false
        DEFAULT_BRANCH:        ${{ env.CURRENT_BRANCH }}
        GITHUB_TOKEN:          ${{ secrets.GITHUB_TOKEN }}
  docker:
    name:                      "Docker => Build and Push"
    runs-on:                   ubuntu-latest
    needs:
      - lint
    steps:
      - name:                  "Init => Checkout"
        uses:                  actions/checkout@v2
      - name:                  "Prepare => Default DOCKER_TAG"
        run:                   echo DOCKER_TAG=latest >> $GITHUB_ENV
      - name:                  "Prepare => Tag DOCKER_TAG"
        if:                    ${{ github.event_name == 'release' }}
        run:                   echo DOCKER_TAG=${GITHUB_REF/refs\/tags\//} >> $GITHUB_ENV
      - name:                  "Docker => Login to GitHub Container Registry"
        uses:                  docker/login-action@v1
        with:
          registry:            ghcr.io
          username:            ${{ github.repository_owner }}
          password:            ${{ secrets.CR_PAT }}
      - name:                  "Docker => Set up Docker Buildx"
        id:                    buildx
        uses:                  docker/setup-buildx-action@v1
        with:
          version:             latest
      - name:                  "Docker => Build and push"
        id:                    docker_build
        uses:                  docker/build-push-action@v2
        with:
          context:             .
          file:                ./Dockerfile
          platforms:           linux/amd64
          push:                true
          tags:                |
            ghcr.io/${{ env.DOCKER_USER }}/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
      - name:                  "Docker => Image digest"
        run:                   echo ${{ steps.docker_build.outputs.digest }}
